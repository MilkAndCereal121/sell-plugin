plugins {
  id 'java'
}

group = 'net.luxcube'
version = '1.0-SNAPSHOT'

repositories {
  mavenCentral()
  maven {
    name = "papermc-repo"
    url = "https://repo.papermc.io/repository/maven-public/"
  }

  maven {
    name = "jitpack"
    url = "https://jitpack.io"
  }

}

dependencies {
  compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"

  implementation "org.jetbrains:annotations:24.0.0"

  compileOnly 'org.projectlombok:lombok:1.18.32'
  annotationProcessor 'org.projectlombok:lombok:1.18.32'

  testCompileOnly 'org.projectlombok:lombok:1.18.32'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

  implementation "com.github.SaiintBrisson.command-framework:bukkit:1.3.1"
  implementation "com.github.DevNatan:inventory-framework:2.5.4-rc.1"

  compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
}

def targetJavaVersion = 17
java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'

  if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
    options.release.set(targetJavaVersion)
  }
}

tasks {
  javadoc {
    options.encoding = 'UTF-8' // We want UTF-8 for everything
  }
}


jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

processResources {
  def props = [version: version]
  inputs.properties props
  filteringCharset 'UTF-8'
  filesMatching('plugin.yml') {
    expand props
  }
}
